(load "unit-test.rkt")

(define (derivative expr)
  (cond ((number? expr) 0)
        ((or (equal? 'x expr) (equal? 'e expr)) 1)
        ((equal? (car expr) '*)
         `(+ (* ,(derivative (cadr expr)) ,(caddr expr))
             (* ,(cadr expr) ,(derivative (caddr expr)))))
        ((equal? (car expr) '/)
         `(/ (- (* ,(derivative (cadr expr)) ,(caddr expr))
                (* ,(cadr expr) ,(derivative (caddr expr))))
             (expt expr2 2)))
        ((equal? (car expr) '+)
         (if (not (null? (cddr expr)))
             `(+ ,(derivative (cadr expr)) ,(derivative (caddr expr)))
             `(+ ,(derivative (cadr expr)))))
        ((equal? (car expr) '-)
         (if (not (null? (cddr expr)))
             `(- ,(derivative (cadr expr)) ,(derivative (caddr expr)))
             `(- ,(derivative (cadr expr)))))
        ((equal? (car expr) 'sin)
         `(* ,(derivative (cadr expr)) (cos ,(cadr expr))))
        ((equal? (car expr) 'cos)
         `(* ,(derivative (cadr expr)) (- (sin ,(cadr expr)))))
        ((equal? (car expr) 'ln)
         `(/ ,(derivative (cadr expr)) ,(cadr expr)))
        ((equal? (car expr) 'expt)
         (cond ((equal? (cadr expr) 'e)
                `(* ,(derivative (caddr expr)) (expt e ,(caddr expr))))
               ((and (equal? (cadr expr) 'x) (number? (caddr expr)))
                `(* ,(caddr expr) (expt x ,(- (caddr expr) 1))))
               ((equal? (cadr expr) 'x)
                `(+ (expt x ,(caddr expr))
                    (* (expt x ,(caddr expr)) (ln x))))
               ((and (number? (cadr expr)) (not (number? (caddr expr))))
                `(* ,(derivative (caddr expr))
                    (* (expt ,(cadr expr) ,(caddr expr))
                       (ln ,(cadr expr)))))
               (else 0)))))


; Тесты

(derivative '(expt x 10))
(derivative '(* 2 (expt x 5)))
(derivative (list '* 'x 'x))

(derivative 2)
(derivative 'x)
(derivative '(- x))
(derivative '(* 1 x))
(derivative '(* -1 x))
(derivative '(* -4 x))
(derivative '(* 10 x))
(derivative '(- (* 2 x) 3))
(derivative '(expt x 10))
(derivative '(* 2 (expt x 5)))
(derivative '(expt x -2))
(derivative '(expt 5 x))
(derivative '(cos x))
(derivative '(sin x))
(derivative '(expt e x))
(derivative '(* 2 (expt e x)))
(derivative '(* 2 (expt e (* 2 x))))